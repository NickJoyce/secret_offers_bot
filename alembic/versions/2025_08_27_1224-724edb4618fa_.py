"""-

Revision ID: 724edb4618fa
Revises: 
Create Date: 2025-08-27 12:24:47.411515

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_file


# revision identifiers, used by Alembic.
revision: str = '724edb4618fa'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('table_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False, comment='Дата и время'),
    sa.Column('str_field', sa.String(length=100), nullable=False, comment='строка'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('first_start_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("timezone('Europe/Moscow', now())"), nullable=False, comment='Дата создания'),
    sa.Column('tg_id', sa.BigInteger(), nullable=False, comment='ID пользователя в Telegram'),
    sa.Column('message', sa.JSON(), nullable=False, comment='Первое сообщение /start отпрвленное тг на вебхук'),
    sa.Column('is_sent', sa.Boolean(), nullable=True, comment='Флаг отправки в talk-me'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_id')
    )
    op.create_table('greeting_offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Имя'),
    sa.Column('old_price', sa.Float(), nullable=False, comment='Старая цена'),
    sa.Column('new_price', sa.Float(), nullable=False, comment='Новая цена'),
    sa.Column('equipment', sa.String(length=255), nullable=True, comment='Аппараты'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Флаг активности'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('talk_me_messages_from_client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("timezone('Europe/Moscow', now())"), nullable=False, comment='Дата создания'),
    sa.Column('tg_id', sa.BigInteger(), nullable=False, comment='ID пользователя в Telegram'),
    sa.Column('search_id', sa.BigInteger(), nullable=False, comment='Уникальный идентификатор из Cookies (talk-me)'),
    sa.Column('client_id', sa.String(length=255), nullable=False, comment='Уникальный идентификатор посетителя для поиска (talk-me)'),
    sa.Column('webhook_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='Данные из talk-me при возникновении события Новое сообщение от клиента'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_talk_me_messages_from_client_client_id'), 'talk_me_messages_from_client', ['client_id'], unique=False)
    op.create_index(op.f('ix_talk_me_messages_from_client_tg_id'), 'talk_me_messages_from_client', ['tg_id'], unique=False)
    op.create_table('tg_clients',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата обновления'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_id', sa.BigInteger(), nullable=False, comment='ID пользователя в Telegram'),
    sa.Column('reg_name', sa.String(length=255), nullable=False, comment='Имя указанное при регистрации'),
    sa.Column('reg_phone', sa.String(length=255), nullable=False, comment='Телефон указанный при регистрации'),
    sa.Column('tg_username', sa.String(length=255), nullable=True, comment='Имя пользователя в Telegram'),
    sa.Column('tg_first_name', sa.String(length=255), nullable=True, comment='Имя (tg)'),
    sa.Column('tg_last_name', sa.String(length=255), nullable=True, comment='Фамилия (tg)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Флаг активности'),
    sa.Column('talk_me_search_id', sa.BigInteger(), nullable=True, comment='Уникальный идентификатор из Cookies (talk-me)'),
    sa.Column('talk_me_client_id', sa.String(length=255), nullable=True, comment='Уникальный идентификатор посетителя для поиска (talk-me)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_managers',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата обновления'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_id', sa.BigInteger(), nullable=False, comment='ID пользователя в Telegram'),
    sa.Column('first_name', sa.String(length=255), nullable=False, comment='Имя'),
    sa.Column('last_name', sa.String(length=255), nullable=False, comment='Фамилия'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Флаг активности'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_newsletters',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Дата обновления'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Имя'),
    sa.Column('text', sa.String(length=4096), nullable=True, comment='Текст'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Флаг активности'),
    sa.Column('files', sqlalchemy_file.types.FileField(), nullable=True, comment='Файлы'),
    sa.Column('images', sqlalchemy_file.types.ImageField(), nullable=True, comment='Изображения'),
    sa.Column('tg_ids', sqlalchemy_file.types.FileField(), nullable=True, comment='Файл эксель с id пользователей котоорым будет отправлена рассылка'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tgclient_newsletter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tgclient_id', sa.Integer(), nullable=False),
    sa.Column('newsletter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['newsletter_id'], ['tg_newsletters.id'], ),
    sa.ForeignKeyConstraint(['tgclient_id'], ['tg_clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True, comment='Email'),
    sa.Column('hashed_password', sa.String(), nullable=True, comment='Хэш пароля'),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Конфигурация пользователя'),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Активен'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('tgclient_newsletter')
    op.drop_table('tg_newsletters')
    op.drop_table('tg_managers')
    op.drop_table('tg_clients')
    op.drop_index(op.f('ix_talk_me_messages_from_client_tg_id'), table_name='talk_me_messages_from_client')
    op.drop_index(op.f('ix_talk_me_messages_from_client_client_id'), table_name='talk_me_messages_from_client')
    op.drop_table('talk_me_messages_from_client')
    op.drop_table('greeting_offers')
    op.drop_table('first_start_messages')
    op.drop_table('table_test')
    # ### end Alembic commands ###
